{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/issue.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,4J;;;;;;;;;;;ACAA,+tCAA+tC,uQ;;;;;;;;;;;ACA/tC,kmDAAkmD,wR;;;;;;;;;;;ACAlmD,sZAAsZ,eAAe,wMAAwM,qBAAqB,kMAAkM,kBAAkB,8LAA8L,gBAAgB,ulBAAulB,2BAA2B,8C;;;;;;;;;;;;;;;;;;ACA7mD;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACc;AAWR;AACS;AACD;AAIC;AACT;AACgC;AACd;AACM;AACN;AAElB;AAE/C,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,oFAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAa,EAAE;IAC9C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,8EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;CACpD,CAAC;AAiCF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA7BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,8EAAa;gBACb,oFAAe;gBACf,8EAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,4FAAuB;gBACvB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,qEAAgB;gBAChB,kEAAgB;gBAChB,oEAAkB;gBAClB,gEAAc;gBACd,iEAAe;gBACf,iEAAe;gBACf,+DAAa;gBACb,iEAAe;gBACf,+DAAa;gBACb,gEAAc;gBACd,kEAAgB;gBAChB,mEAAiB;gBACjB,kEAAmB;aACpB;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;YACzB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AClEtB,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;ACAb;AACC;AACV;AAC2B;AASpE;IAIE,yBAAoB,YAA0B,EAAU,MAAc,EAAS,EAAe;QAA1E,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAa;QAE5F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;SACb,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR,UAAS,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ;QAAlD,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC;YAC9E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IArBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,+JAAsC;;SAEvC,CAAC;+EAKkC,2DAAY,EAAkB,sDAAM,EAAa,0DAAW;OAJnF,eAAe,CAuB3B;IAAD,sBAAC;CAAA;AAvB2B;;;;;;;;;;;;ACZ5B,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;;ACAb;AACO;AACU;AAChB;AACH;AAShD;IAKE,uBAAoB,YAA0B,EAAU,MAAc,EAAS,KAAqB,EAAU,QAAqB,EAAU,EAAe;QAAxI,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAa;QAAU,OAAE,GAAF,EAAE,CAAa;QAH5J,UAAK,GAAQ,EAAE,CAAC;QAId,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBACnD,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACxD,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBACpE,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBACpE,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC9D,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAU,GAAV;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACjC,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;SACX,CAAC,CAAC;IACL,CAAC;IACD,mCAAW,GAAX,UAAY,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM;QAA7D,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC;YAClG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,EAAE;gBACrD,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAtCU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yJAAoC;;SAErC,CAAC;+EAMkC,2DAAY,EAAkB,sDAAM,EAAgB,8DAAc,EAAoB,6DAAW,EAAc,0DAAW;OALjJ,aAAa,CAwCzB;IAAD,oBAAC;CAAA;AAxCyB;;;;;;;;;;;;ACb1B,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;ACAb;AACT;AACU;AAQnD;IAKE,uBAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFtE,qBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IAEH,CAAC;IAE3E,gCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,mCAAW,GAAX;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY;aAChB,SAAS,EAAE;aACX,SAAS,CAAC,UAAC,IAAa;YACvB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iCAAS,GAAT,UAAU,EAAE;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAS,EAAI,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,mCAAW,GAAX,UAAY,EAAE;QAAd,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YAC1C,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IA3BU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yJAAoC;;SAErC,CAAC;+EAMkC,2DAAY,EAAkB,sDAAM;OAL3D,aAAa,CA4BzB;IAAD,oBAAC;CAAA;AA5ByB;;;;;;;;;;;;;;;;;;;ACViB;AACO;AAKlD;IAIE,sBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAFnC,QAAG,GAAG,uBAAuB,CAAC;IAES,CAAC;IAExC,+BAAQ,GAAR,UAAS,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ;QAChD,IAAM,KAAK,GAAG;YACZ,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,WAAW;YACxB,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,gBAAa,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;IACD,gCAAS,GAAT;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,YAAS,CAAC,CAAC;IAC7C,CAAC;IACD,mCAAY,GAAZ,UAAa,EAAE;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACnD,CAAC;IACD,kCAAW,GAAX,UAAY,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM;QAC/D,IAAM,KAAK,GAAG;YACZ,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,WAAW;YACxB,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,MAAM;SACf,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,uBAAkB,EAAI,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IACD,kCAAW,GAAX,UAAY,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,uBAAkB,EAAI,CAAC,CAAC;IAC1D,CAAC;IAjCU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKyB,+DAAU;OAJxB,YAAY,CAkCxB;IAAD,mBAAC;CAAA;AAlCwB;;;;;;;;;;;;;ACNzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar>\\n  <span>Angular 6 - MEAN Stack Sample Application</span>\\n</mat-toolbar>\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <section class=\\\"mat-typography\\\">\\n      <h3>Create A New Issue</h3>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]=\\\"createForm\\\" class=\\\"create-form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"Issue Title\\\" formControlName=\\\"title\\\" #title>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"Responsible\\\" formControlName=\\\"responsible\\\" #responsible>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" #description></textarea>\\n      </mat-form-field>\\n      <mat-form-field>\\n          <mat-select placeholder=\\\"Severity\\\" formControlName=\\\"severity\\\" #severity>\\n            <mat-option value=\\\"Low\\\">Low</mat-option>\\n            <mat-option value=\\\"Medium\\\">Medium</mat-option>\\n            <mat-option value=\\\"High\\\">High</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n      <mat-divider></mat-divider>\\n      <br><br>\\n      <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/list\\\">Back</button>&nbsp;\\n      <button type=\\\"submit\\\" (click)=\\\"addIssue(title.value, responsible.value, description.value, severity.value)\\\" [disabled]=\\\"createForm.pristine || createForm.invalid\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n    </form>\\n  </mat-card>\\n</div>\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <section class=\\\"mat-typography\\\">\\n        <h3>Update Issue</h3>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]=\\\"updateForm\\\" class=\\\"edit-form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input placeholder=\\\"Title\\\" matInput formControlName=\\\"title\\\" #title>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input placeholder=\\\"Responsible\\\" matInput formControlName=\\\"responsible\\\" #responsible>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea placeholder=\\\"Description\\\" matInput formControlName=\\\"description\\\" #description></textarea>\\n      </mat-form-field>\\n      <mat-form-field  class=\\\"field-full-width\\\">\\n          <mat-select placeholder=\\\"Severity\\\" formControlName=\\\"severity\\\" #severity>\\n            <mat-option value=\\\"Low\\\">Low</mat-option>\\n            <mat-option value=\\\"Medium\\\">Medium</mat-option>\\n            <mat-option value=\\\"High\\\">High</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n          <mat-select placeholder=\\\"Status\\\" formControlName=\\\"status\\\" #status>\\n            <mat-option value=\\\"Open\\\">Open</mat-option>\\n            <mat-option value=\\\"In Progress\\\">In Progress</mat-option>\\n            <mat-option value=\\\"Done\\\">Done</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n      <mat-divider></mat-divider>\\n      <br><br>\\n      <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/list\\\">Back</button>&nbsp;\\n      <button type=\\\"submit\\\" (click)=\\\"updateIssue(title.value, responsible.value, description.value, severity.value, status.value)\\\" [disabled]=\\\"updateForm.pristine || updateForm.invalid\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n    </form>\\n  </mat-card>\\n</div>\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/create\\\">Create New Issue</button>\\n    <br><br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <table mat-table [dataSource]=\\\"issues\\\">\\n      <ng-container matColumnDef=\\\"title\\\">\\n        <th mat-header-cell *matHeaderCellDef> Title </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"responsible\\\">\\n        <th mat-header-cell *matHeaderCellDef> Responsible </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.responsible}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"severity\\\">\\n        <th mat-header-cell *matHeaderCellDef> Severity </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.severity}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef> Status </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"actions\\\">\\n          <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\"> Actions </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\">\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"editIssue(element._id)\\\">Edit</button>\\n            <button mat-button color=\\\"warn\\\" (click)=\\\"deleteIssue(element._id)\\\">Delete</button>\\n          </td>\\n        </ng-container>\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  </mat-card>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatToolbarModule, \n  MatFormFieldModule, \n  MatInputModule, \n  MatOptionModule, \n  MatSelectModule, \n  MatIconModule, \n  MatButtonModule, \n  MatCardModule, \n  MatTableModule, \n  MatDividerModule, \n  MatSnackBarModule } from '@angular/material';\n  import {HttpClientModule} from '@angular/common/http';\n  import { ReactiveFormsModule } from '@angular/forms';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListComponent } from './components/list/list.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\n\nimport { IssueService } from './issue.service';\n\nconst routes: Routes = [\n  { path: 'create', component: CreateComponent },\n  { path: 'edit/:id', component: EditComponent },\n  { path: 'list', component: ListComponent },\n  { path: '', redirectTo: '/list', pathMatch: 'full'}\n];\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    CreateComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    ReactiveFormsModule\n  ],\n  providers: [IssueService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IssueService } from '../../issue.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  createForm: FormGroup;\n\n  constructor(private issueService: IssueService, private router: Router,private fb: FormBuilder) { \n\n    this.createForm = this.fb.group({\n      title: ['', Validators.required],\n      responsible: '',\n      description: '',\n      severity: ''\n    });\n  }\n\n  addIssue(title, responsible, description, severity) {\n    this.issueService.addIssue(title, responsible, description, severity).subscribe(() => {\n      this.router.navigate(['/list']);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { IssueService } from '../../issue.service';\nimport { MatSnackBar } from '@angular/material';\nimport { Issue } from '../../issue.model';\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  id: String;\n  issue: any = {};\n  updateForm: FormGroup;\n\n  constructor(private issueService: IssueService, private router: Router,private route: ActivatedRoute, private snackBar: MatSnackBar, private fb: FormBuilder) { \n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params.id;\n      this.issueService.getIssueById(this.id).subscribe(res => {\n        this.issue = res;\n        this.updateForm.get('title').setValue(this.issue.title);\n        this.updateForm.get('responsible').setValue(this.issue.responsible);\n        this.updateForm.get('description').setValue(this.issue.description);\n        this.updateForm.get('severity').setValue(this.issue.severity);\n        this.updateForm.get('status').setValue(this.issue.status);\n      });\n    });\n  }\n\n  createForm() {\n    this.updateForm = this.fb.group({\n      title: ['', Validators.required ],\n      responsible: '',\n      description: '',\n      severity: '',\n      status: ''\n    });\n  }\n  updateIssue(title, responsible, description, severity, status) {\n    this.issueService.updateIssue(this.id, title, responsible, description, severity, status).subscribe(() => {\n      this.snackBar.open('Issue updated successfully', 'OK', {\n        duration: 3000,\n      });\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IssueService } from '../../issue.service';\nimport { Issue } from '../../issue.model';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  issues: Issue[];\n  displayedColumns = ['title', 'responsible', 'severity', 'status', 'actions'];\n\n  constructor(private issueService: IssueService, private router: Router) { }\n\n  ngOnInit() {\n    this.fetchIssues();\n  }\n\n  fetchIssues() {\n    this.issueService\n    .getIssues()\n    .subscribe((data: Issue[]) => {\n      this.issues = data;\n      console.log('Data requested ... ');\n      console.log(this.issues);\n    });\n  }\n  editIssue(id) {\n    this.router.navigate([`/edit/${id}`]);\n  }\n  deleteIssue(id) {\n    this.issueService.deleteIssue(id).subscribe(() => {\n      this.fetchIssues();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueService {\n\n  uri = 'http://localhost:3000';\n\n  constructor(private http:HttpClient) { }\n\n  addIssue(title, responsible, description, severity) {\n    const issue = {\n      title: title,\n      responsible: responsible,\n      description: description,\n      severity: severity\n    };\n    return this.http.post(`${this.uri}/issues/add`, issue);\n  }\n  getIssues() {\n    return this.http.get(`${this.uri}/issues`);\n  }\n  getIssueById(id) {\n    return this.http.get(`${this.uri}/issues/${id}`);\n  }\n  updateIssue(id, title, responsible, description, severity, status) {\n    const issue = {\n      title: title,\n      responsible: responsible,\n      description: description,\n      severity: severity,\n      status: status\n    };\n    return this.http.post(`${this.uri}/issues/update/${id}`, issue);\n  }\n  deleteIssue(id) {\n    return this.http.get(`${this.uri}/issues/delete/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}